{
    "node": true, // Enable globals available when code is running inside of the NodeJS runtime environment.
    "browser": true, // Standard browser globals e.g. `window`, `document`.
    "es5": false, // Allow EcmaScript 5 syntax.
    "esnext": true, // Allow ES.next specific features such as `const` and `let`.
    "bitwise": false, // Prohibit bitwise operators (&, |, ^, etc.).
    "camelcase": false, // Permit only camelcase for `var` and `object indexes`.
    "curly": true, // Require {} for every new block or scope.
    "eqeqeq": true, // Require triple equals i.e. `===`.
    "immed": true, // Require immediate invocations to be wrapped in parens e.g. `( function(){}() );`
    "latedef": false, // Prohibit variable use before definition.
    "newcap": true, // Require capitalization of all constructor functions e.g. `new F()`.
    "noarg": true, // Prohibit use of `arguments.caller` and `arguments.callee`.
    "quotmark": false, // Define quotes to string values.
    "regexp": true, // Prohibit `.` and `[^...]` in regular expressions.
    "undef": true, // Require all non-global variables be declared before they are used.
    "unused": false, // Warn unused variables.
    "strict": true, // Require `use strict` pragma in every file.
    "trailing": true, // Prohibit trailing whitespaces.
    "smarttabs": false, // Suppresses warnings about mixed tabs and spaces
    "asi": false,     // 必须使用分号;
    "indent": 2,      // Specify indentation spacing
    "maxlen": 3020,   // Max line lenght
    "devel": false,   // Allow development statements e.g. `console.log();`.
    "noempty": true,  // Prohibit use of empty blocks.
    "loopfunc": true, // 去除Don't make functions within a loop警告
    "freeze": true,   // 禁止重写原生对象的原型
    "globals": {      // Globals variables.
      "jQuery": true,
      "requirejs": true,
      "next": true,
      "node": true,
      "$": true,
      "page": true
    },
    "predef": [       // Extra globals.
      "define",
      "require",
      "exports",
      "module",
      "describe",
      "before",
      "beforeEach",
      "after",
      "afterEach",
      "it"
    ]
}
